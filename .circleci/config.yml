version: 2.1

executors:
  importer-executor:
    machine:
      image: ubuntu-1604:201903-01

jobs:
  build-test-and-deploy:
    executor: importer-executor
    steps:
      - run:
          name: set_env_variables
          command: |
            echo $CIRCLE_BRANCH;
            echo $CIRCLE_TAG;
            if [[ -n "$CIRCLE_TAG" ]]; then
              echo 'export TAG=latest' >> $BASH_ENV;
              echo 'export DEPLOY=true' >> $BASH_ENV;
              echo 'USING RELEASE CONFIG';
            elif [[ "$CIRCLE_BRANCH" = "master" && -z "$CIRCLE_PULL_REQUEST" ]]; then
              echo 'export TAG=staging' >> $BASH_ENV;
              echo 'export DEPLOY=true' >> $BASH_ENV;
              echo 'USING STAGING CONFIG';
            else
              echo 'export TAG=trunk' >> $BASH_ENV;
              echo 'export DEPLOY=false' >> $BASH_ENV;
              echo 'USING TRUNK CONFIG';
            fi
      - checkout
      - run: npm run dco:ci -- build
      - run: npm run dco:ci -- up -d
      - run:
          name: logs
          background: true
          command: npm run dco:ci -- logs
      - run: docker exec -t sis-importer-api npm run test && docker exec -t sis-importer-mankeli npm run test && docker exec -t sis-importer-db-api npm run test
      - run: |
          if [ "${DEPLOY}" == "true" ]; then
            echo "$DOCKER_PASS" > DOCKER_PASS
            cat DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            npm run dco:ci -- push importer-api importer-mankeli importer-db-api
          fi

workflows:
  version: 2
  build:
    jobs:
      - build-test-and-deploy
