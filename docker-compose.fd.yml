services:
    importer-api:
        command: "npm run start:dev"
        build:
            args:
                NODE_ENV: "development"
            context: importer-api
            dockerfile: dev.Dockerfile
        container_name: sis-importer-api
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - importer-mankeli
        env_file:
            - importer-api/.env
        environment:
            DB_USERNAME: dev
            DB_PASSWORD: dev
            DB_PORT: 5432
            DB_HOST: importer-db
            DB_DATABASE: importer-db
            REDIS_URI: redis://importer-redis:6379
            REDIS_HOST: importer-redis
            REDIS_PORT: 6379
            SONIC: 1
            SERVICE_PROVIDER: fd
            ROOT_ORG_ID: ${ROOT_ORG_ID}
            QUEUE_COMPLETE_COUNT: ${QUEUE_COMPLETE_COUNT:-1}
            QUEUE_COMPLETE_AGE: ${QUEUE_COMPLETE_AGE:-1}
            QUEUE_FAIL_COUNT: ${QUEUE_FAIL_COUNT:-2}
            QUEUE_FAIL_AGE: ${QUEUE_FAIL_AGE:-2}
        ports:
            - 3002:3002 # explorer at http://localhost:3002/
        volumes:
            - ./importer-api:/opt/app-root/src

    importer-mankeli:
        deploy:
            replicas: 4
            mode: replicated
        extra_hosts:
            - "host.docker.internal:host-gateway"
        build:
            args:
                NODE_ENV: "development"
            context: importer-mankeli
            dockerfile: dev.Dockerfile
        command: "npm run start:dev"
        depends_on:
            - importer-db
            - importer-redis
        environment:
            DB_USERNAME: dev
            DB_PASSWORD: dev
            DB_PORT: 5432
            DB_HOST: importer-db
            DB_DATABASE: importer-db
            REDIS_URI: redis://importer-redis:6379
            REDIS_HOST: importer-redis
            REDIS_PORT: 6379
            SERVICE_PROVIDER: fd
        volumes:
            - ./importer-mankeli:/opt/app-root/src

    importer-db:
        container_name: sis-importer-db
        environment:
            POSTGRES_USER: dev
            POSTGRES_PASSWORD: dev
            POSTGRES_DB: importer-db
        image: postgres:13.1
        ports:
            - 15234:5432
        volumes:
            - sis-importer-pgdata:/var/lib/postgresql/data

    importer-db-api:
        build:
            args:
                NODE_ENV: "development"
            context: importer-db-api
            dockerfile: dev.Dockerfile
        command: "npm run start:dev"
        container_name: sis-importer-db-api
        env_file:
            - importer-db-api/.env
        environment:
            DB_USERNAME: postgres
            DB_PASSWORD: postgres
            DB_PORT: 5432
            DB_HOST: importer-db
            DB_DATABASE: importer-db
            REDIS_URI: redis://importer-redis:6379
            REDIS_HOST: importer-redis
            REDIS_PORT: 6379
            SERVICE_PROVIDER: fd
            IMPORTER_DB_API_USER: dev_user
            IMPORTER_DB_API_PASSWORD: dev_password
        ports:
            - 3005:3000
        volumes:
            - ./importer-db-api:/opt/app-root/src

    importer-redis:
        command: [ "redis-server", "--appendonly", "yes", "--port", "6379" ]
        container_name: sis-importer-redis
        image: redis:5.0.7
        ports:
            - 16379:6379
        volumes:
            - sis-importer-redis:/data
volumes:
    sis-importer-redis:
    sis-importer-datastore:
    sis-importer-pgdata:

networks:
    default:
        name: importer_network
